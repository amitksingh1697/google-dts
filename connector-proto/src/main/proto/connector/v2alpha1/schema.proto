syntax = "proto3";

package google.cloud.bigquery.federation.v2alpha1;

import "connector/v2alpha1/data_source.proto";
import "connector/v2alpha1/types.proto";
import "google/protobuf/struct.proto";
import "substrait/type.proto";

option java_package = "com.google.cloud.bigquery.federation.v2alpha1";
option java_multiple_files = true;
option java_outer_classname = "FederationSchemaProto";
option csharp_namespace = "Google.Cloud.BigQuery.Federation.V2Alpha1";
option php_namespace = "Google\\Cloud\\BigQuery\\Federation\\V2alpha1";
option objc_class_prefix = "GCBQFV2A1";

// Schema of the data returned by a connected Data Source.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: Schema is not a rest resource because it does not
//     have an unique identifier, cannot be created, deleted, listed or updated.
//     --)
message Schema {
  // Describes data field returned by the data source.
  message Field {
    // Field name. Certain field names are built in and have special
    // meaning:
    // * _PARTITIONDATE of type DATE means date partition column that can
    //   be used for date range filtering in the BI frontend
    // * _PARTITIONKEY of any type means partition key in the underlying table
    // Except for built in names, field_name cannot start
    // with a single underscore (_)
    // If in the underlying backend field starts with underscore, it is up
    // to the implementation to disambiguate. The recommended approach is
    // to escape all leading underscores with double underscores.
    string field_name = 1;
    // Optional user friendly name of the field.
    string display_name = 2;
    // Type of the field.
    Type type = 3;

    // Metadata associated with a field.
    FieldMetadata field_metadata = 4;
  }
  // Fields returned by the data source.
  // May be just plain field references or aggregated values.
  repeated Field fields = 1;

  // Optional metadata associated with the data represented by the schema.
  google.protobuf.Struct metadata = 2 [lazy = true];
}

// Schema of the data returned by a connected Data Source in a Substrait format.
// Alongside a Substrait NamedStruct a datasource can also provide metadata
// associated with the resources as well as metadata associated with each field
// of the schema.
// This `SubstraitSchema` is returned by a connected datasource.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: SubstraitSchema is not a rest resource because
//     it does not have an unique identifier, cannot be created, deleted,
//     listed or updated.
//     --)
message SubstraitSchema {
  // Substrait schema of the targeted resource.
  substrait.NamedStruct schema = 1;

  // Metadata associated with the fields. The fields' metadata should be in the
  // same order as they appear in the Substrait schema.
  // Example:
  //   The following schema
  //     a: int64
  //     b: struct<c: float32, d: string>
  //     e: time
  //
  // will be represented as
  //   schema {
  //     names: ["a", "b", "c", "d", "e"]
  //     struct { types: [ int64, struct<float32, string>, time ] }
  //   }
  //   fields_metadata: [
  //     `field_a_metadata`,
  //     `field_b_metadata`,
  //     `field_e_metadata`
  //   ]
  repeated FieldMetadata fields_metadata = 2;

  // Optional metadata associated with the data represented by the schema.
  google.protobuf.Struct metadata = 3 [lazy = true];
}

// Field metadata.
message FieldMetadata {
  // Determines how the field should be presented to the user, specifically:
  // whether it should be presented by default as part of the schema,
  // expanded in `SELECT *`, and explicitly referenced in a query.
  enum Visibility {
    // Unspecified visibility. Fields with unspecified visibility are
    // treated as if `REGULAR` visibility was set.
    VISIBILITY_UNSPECIFIED = 0;
    // Is presented by default as part of the schema, expanded in `SELECT
    // *`, and can be explicitly referenced in a query.
    REGULAR = 1;
    // Can be referenced in a query but it is not expanded in `SELECT  *`.
    HIDDEN = 2;
  }
  // Specifies field visibility. It controls how a field should be presented
  // to the user.
  Visibility visibility = 1;
}
