<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.google.cloud.connector</groupId>
  <artifactId>connectors</artifactId>
  <packaging>pom</packaging>
  <version>${revision}</version>
  <modules>
    <module>connector-proto</module>
    <module>connector-api</module>
    <module>connector-common</module>
    <module>connector-gcp-client</module>
    <module>connector-server</module>
    <module>connector-maven-plugin</module>
    <module>connector-library</module>
    <module>connector-client</module>
  </modules>

  <properties>
    <revision>0.1.0-SNAPSHOT</revision>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <connector.package.directory>target/package</connector.package.directory>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.version>3.10.1</maven.compiler.version>
    <maven.checkstyle.version>3.2.0</maven.checkstyle.version>
    <maven.dependency.version>3.4.0</maven.dependency.version>
    <maven.resources.version>3.3.0</maven.resources.version>
    <maven.flatten.version>1.3.0</maven.flatten.version>
    <maven.surefire.version>3.0.0-M8</maven.surefire.version>
    <!-- Dependency versions -->
    <annotation.api.version>1.3.2</annotation.api.version>
    <calcite.version>1.32.0</calcite.version>
    <checkstyle.version>10.5.0</checkstyle.version>
    <commons-cli.version>1.5.0</commons-cli.version>
    <error-prone.version>2.16</error-prone.version>
    <flogger.version>0.7.4</flogger.version>
    <gcs.connector.version>hadoop2-2.2.14</gcs.connector.version>
    <google.cloud.libraries.version>26.15.0</google.cloud.libraries.version>
    <google.common.protos.version>2.14.2</google.common.protos.version>
    <grpc.version>1.54.1</grpc.version>
    <guava.version>31.1-jre</guava.version>
    <guice.version>7.0.0</guice.version>
    <hadoop.version>3.3.1</hadoop.version>
    <jacoco.version>0.8.8</jacoco.version>
    <jsr305.version>3.0.2</jsr305.version>
    <junit.version>5.9.1</junit.version>
    <mockito.version>5.1.0</mockito.version>
    <netty.version>4.1.87.Final</netty.version>
    <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
    <os.maven.plugin.version>1.6.2</os.maven.plugin.version>
    <picocli.version>4.7.3</picocli.version>
    <protobuf.maven.plugin.version>0.6.1</protobuf.maven.plugin.version>
    <protoc.version>3.21.12</protoc.version>
    <spark.version>3.3.1</spark.version>
    <substrait.version>0.16.0</substrait.version>
    <test-parameter-injector.version>1.15</test-parameter-injector.version>
    <truth.version>1.1.5</truth.version>
    <jsqlparser.version>4.9</jsqlparser.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-bom</artifactId>
        <version>${protoc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.substrait</groupId>
        <artifactId>core</artifactId>
        <version>${substrait.version}</version>
        <exclusions>
          <exclusion>
            <groupId>*</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>libraries-bom</artifactId>
        <version>${google.cloud.libraries.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava-bom</artifactId>
        <version>${guava.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.api.grpc</groupId>
        <artifactId>proto-google-common-protos</artifactId>
        <version>${google.common.protos.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${annotation.api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>flogger</artifactId>
        <version>${flogger.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>flogger-system-backend</artifactId>
        <version>${flogger.version}</version>
        <!-- Use runtime dependency for the backend.
        The actual backend to use will be determined by the build process,
        which is outside this project scope. -->
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_2.13</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_2.13</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-core</artifactId>
        <version>${calcite.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>commons-compiler</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.google.testparameterinjector</groupId>
        <artifactId>test-parameter-injector-junit5</artifactId>
        <version>${test-parameter-injector.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.truth</groupId>
        <artifactId>truth</artifactId>
        <version>${truth.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.truth.extensions</groupId>
        <artifactId>truth-proto-extension</artifactId>
        <version>${truth.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>${netty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <repositories>
        <repository>
          <id>central</id>
          <name>Maven Central remote repository</name>
          <url>artifactregistry://us-maven.pkg.dev/artifact-foundry-prod/ah-3p-staging-maven</url>
          <layout>default</layout>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
    <profile>
      <id>release</id>
      <repositories>
        <repository>
          <id>central</id>
          <name>Maven Central remote repository</name>
          <!-- Using the staging maven URL to validate if the Airlock onboarding works. -->
          <!--url>artifactregistry://us-maven.pkg.dev/artifact-foundry-prod/maven-3p-trusted</url-->
          <url>artifactregistry://us-maven.pkg.dev/artifact-foundry-prod/ah-3p-staging-maven</url>
          <layout>default</layout>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Maven compiler plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <compilerArgs>
              <arg>-XDcompilePolicy=simple</arg>
              <arg>-Xplugin:ErrorProne
                -XepExcludedPaths:.*/generated-.*sources/protobuf/.*
              </arg>
              <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
              <arg>-parameters</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>${error-prone.version}</version>
              </path>
              <!-- Other annotation processors go here.

              If 'annotationProcessorPaths' is set, processors will no longer be
              discovered on the regular -classpath; see also 'Using Error Prone
              together with other annotation processors' below. -->
              <path>
                <groupId>info.picocli</groupId>
                <artifactId>picocli-codegen</artifactId>
                <version>${picocli.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>

        <!-- Maven dependency plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>

        <!-- Maven jar plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>

        <!-- Checkstyle plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven.checkstyle.version}</version>
          <executions>
            <execution>
              <id>checkstyle</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <configLocation>checkstyle.xml</configLocation>
            <suppressionsLocation>suppressions.xml</suppressionsLocation>
            <failOnViolation>true</failOnViolation>
            <violationSeverity>warning</violationSeverity>
            <consoleOutput>true</consoleOutput>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <sourceDirectories>
              <sourceDirectory>${project.build.sourceDirectory}
              </sourceDirectory>
            </sourceDirectories>
            <excludes>**/generated-sources/**</excludes>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Code Test Coverage -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${maven.flatten.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <!-- Added to ensure Spark programs can run as part of our tests -->
        <configuration>
          <argLine>@{argLine} --add-exports java.base/sun.nio.ch=ALL-UNNAMED
            --add-exports java.base/sun.util.calendar=ALL-UNNAMED
            --add-exports java.base/sun.security.util=ALL-UNNAMED
            --add-exports java.base/sun.security.action=ALL-UNNAMED
            --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
            --add-opens=java.base/java.lang=ALL-UNNAMED
            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens=java.base/java.io=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>com.google.cloud.artifactregistry</groupId>
        <artifactId>artifactregistry-maven-wagon</artifactId>
        <version>2.2.0</version>
      </extension>
    </extensions>
  </build>
</project>